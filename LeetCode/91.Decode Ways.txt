class Solution {
public:
    int numDecodings(string s) 
    {
        if(s[0] == '0')
            return 0;

        vector<int> DP(s.size(), -1);
        for(int i = 0; i < s.size() - 1; ++i)
        {
            if(s[i] == '0')
                DP[i] = 0;

            if(s[i] == '0' && s[i + 1] == '0')
                return 0;
        }
        return Solve(s, 0, DP);
    }
private:
    int Solve(string& s, int currentIndex, vector<int>& DP)
    {
        if(currentIndex < s.size() && s[currentIndex] == '0')
            return 0;
        if(currentIndex == s.size() + 1)
            return 0;
        if(currentIndex == s.size())
            return 1;
        if(DP[currentIndex] != -1)
            return DP[currentIndex];

        int firstOption = Solve(s, currentIndex + 1, DP);
        int secondOption = 0;
        if(currentIndex + 1 < s.size())
        {
            string twoDigitNumber;
            twoDigitNumber += s[currentIndex];;
            twoDigitNumber += s[currentIndex + 1];
            if(twoDigitNumber <= "26")
                secondOption = Solve(s, currentIndex + 2, DP);
        }
        DP[currentIndex] = firstOption + secondOption;
        return DP[currentIndex];
    }
};
