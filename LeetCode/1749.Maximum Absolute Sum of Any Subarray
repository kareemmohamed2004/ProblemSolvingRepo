class Solution {
public:
    int maxAbsoluteSum(vector<int>& nums)
    {
        return max(GetMaxAbsSubarraySum(nums), GetMinAbsSubarraySum(nums));
    }
private:
    int GetMaxAbsSubarraySum(vector<int>& nums)
    {
        long long currentSum = 0;
        long long maxSubarraySum = LLONG_MIN;
        for (int i = 0; i < nums.size(); ++i)
        {
            currentSum += nums[i];
            if (currentSum < 0)
                currentSum = 0;
            else
            {
                if (maxSubarraySum < currentSum)
                    maxSubarraySum = currentSum;
            }
        }
        if (maxSubarraySum == LLONG_MIN)
            return 0;
        return abs(maxSubarraySum);
    }

    int GetMinAbsSubarraySum(vector<int>& nums)
    {
        long long currentSum = 0;
        long long minSubarraySum = LLONG_MAX;
        for (int i = 0; i < nums.size(); ++i)
        {
            currentSum += nums[i];
            if (0 < currentSum)
                currentSum = 0;
            else
            {
                if (currentSum < minSubarraySum)
                    minSubarraySum = currentSum;
            }
        }
        if (minSubarraySum == LLONG_MAX)
            return 0;
        return abs(minSubarraySum);
    }
};
