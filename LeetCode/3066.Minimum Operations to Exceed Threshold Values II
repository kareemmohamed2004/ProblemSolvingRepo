class Solution {
public:
    int minOperations(vector<int>& nums, int k) 
    {
        priority_queue <unsigned long long, vector<unsigned long long>, greater<unsigned long long>> sortedNums;
        for(int i = 0; i < nums.size(); ++i)
            sortedNums.push(nums[i]);

        if(k <= sortedNums.top())
            return 0;
        
        unsigned long long smallestNumber, secondSmallestNumber, newNumber, countOfOperations;
        countOfOperations = 0;
        while(!sortedNums.empty() && sortedNums.top() < k)
        {
            smallestNumber = sortedNums.top();
            sortedNums.pop();
            secondSmallestNumber = sortedNums.top();
            sortedNums.pop();
            newNumber = min(smallestNumber, secondSmallestNumber) * 2 + max(smallestNumber, secondSmallestNumber);
            sortedNums.push(newNumber);
            ++countOfOperations;
        }
        return countOfOperations;
    }
};
