class Solution {
public:
    long long gridGame(vector<vector<int>>& grid)
    {
        vector<long long> firstRowPrefixSum;
        vector<long long> secondRowPrefixSum;
        long long firstRobotScore, secondRobotScore, MIN = LLONG_MAX;
        int columnsCount = grid[0].size();
        firstRowPrefixSum.emplace_back(grid[0][0]);
        secondRowPrefixSum.emplace_back(grid[1][0]);
        for (int i = 1; i < columnsCount; i++)
        {
            firstRowPrefixSum.emplace_back(firstRowPrefixSum[i - 1] + grid[0][i]);
            secondRowPrefixSum.emplace_back(secondRowPrefixSum[i - 1] + grid[1][i]);
        }
        for (int i = 0; i < firstRowPrefixSum.size(); i++)
        {
            if (i == 0)
            {
                firstRobotScore = firstRowPrefixSum[i] + secondRowPrefixSum[columnsCount - 1];
                secondRobotScore = firstRowPrefixSum[columnsCount - 1] - firstRowPrefixSum[i];
            }
            else
            {
                firstRobotScore = firstRowPrefixSum[i] + (secondRowPrefixSum[columnsCount - 1] - secondRowPrefixSum[i - 1]);
                secondRobotScore = max((firstRowPrefixSum[columnsCount - 1] - firstRowPrefixSum[i]), secondRowPrefixSum[i - 1]);
            }
            if (secondRobotScore < MIN)
                MIN = secondRobotScore;
        }
        return MIN;
    }
};
