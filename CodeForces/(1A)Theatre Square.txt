#include<iostream>
using namespace std;

unsigned long long num_of_blocks(unsigned long long rec_length,unsigned long long rec_width,unsigned long long sq_side);

int main()
{
    unsigned int r_length,r_width,s_side;
    cin>>r_length;
    cin>>r_width;
    cin>>s_side;
    cout<<num_of_blocks(r_length,r_width,s_side);

    return 0;
}

unsigned long long num_of_blocks(unsigned long long rec_length,unsigned long long rec_width,unsigned long long sq_side)
{
    unsigned long long num_of_blocks;

    if( (sq_side>=rec_length) && (sq_side>=rec_width) )
          num_of_blocks=1;
    else if( (rec_length>=sq_side) && (sq_side>=rec_width) )
    {
          if(rec_length%sq_side==0)
            num_of_blocks=rec_length/sq_side;
          else
            num_of_blocks=(rec_length/sq_side)+1;
    }
    else if( (rec_width>=sq_side) && (sq_side>=rec_length) )
    {
        if(rec_width%sq_side==0)
          num_of_blocks=rec_width/sq_side;
        else
          num_of_blocks=(rec_width/sq_side)+1;
    }
    else   // if (rectangle length>=square side && rectangle width>=square side)
          {
              unsigned long long sum_l,sum_w;

              if(rec_length%sq_side==0)
                sum_l=rec_length/sq_side;
              else
                sum_l=(rec_length/sq_side)+1;

              if(rec_width%sq_side==0)
                 sum_w=rec_width/sq_side;
              else
                sum_w=(rec_width/sq_side)+1;

                num_of_blocks=sum_l*sum_w;
          }

    return num_of_blocks;
}
