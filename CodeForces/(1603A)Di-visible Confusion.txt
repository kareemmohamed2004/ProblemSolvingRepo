using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ProblemAnswer
{
    public class Program
    {
        public static void Main(string[] args)
        {
            ProblemAnswer();
        }
        private static void ProblemAnswer()
        {
            uint NumberOfTestCases;
            List<string> TestCasesAnswers = new();
            List<UInt64> Numbers = new();
            NumberOfTestCases = Convert.ToUInt32(Console.ReadLine());
            for (uint i = 0; i < NumberOfTestCases; i++)
            {
                _ = Convert.ToUInt32(Console.ReadLine());
                var Temp = Console.ReadLine().Split(' ');
                for (int k = 0; k < Temp.Length; k++)
                    Numbers.Add(Convert.ToUInt64(Temp[k]));
                if (CanEraseSequenceElements(Numbers))
                    TestCasesAnswers.Add("YES");
                else
                    TestCasesAnswers.Add("NO");
                Numbers.Clear();
            }
            for (int i = 0; i < TestCasesAnswers.Count; i++)
                Console.WriteLine(TestCasesAnswers[i]);
        }

        private static bool CanEraseSequenceElements(List<UInt64> Numbers)
        {
            bool IsNumberErasable;
            for (int i = 1; i <= Numbers.Count; i++)
            {
                IsNumberErasable = false;
                for (int j = i + 1; j >= 2; j--)
                {
                    if (Numbers[i - 1] % (ulong)j != 0)
                    {
                        IsNumberErasable = true;
                        break;
                    }
                }
                if (!IsNumberErasable)
                    return false;
            }
            return true;
        }
    }
}