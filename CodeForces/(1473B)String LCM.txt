using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ProblemAnswer
{
    public class Program
    {
        public static void Main(string[] args)
        {
            ProblemAnswer();
        }
        private static void ProblemAnswer()
        {
            uint NumberOfTestCases;
            string FirstString,SecondString;
            List<string> TestCasesAnswers=new List<string>();
            NumberOfTestCases = Convert.ToUInt32(Console.ReadLine());
            for (uint i = 0; i < NumberOfTestCases; i++)
            {
                FirstString = Console.ReadLine();
                SecondString= Console.ReadLine();
                TestCasesAnswers.Add(GetLCMOfTwoStringsIfExists(FirstString, SecondString));
            }
            for (int i = 0; i < TestCasesAnswers.Count; i++)
                Console.WriteLine(TestCasesAnswers[i]);
        }

        private static string GetLCMOfTwoStringsIfExists(string a, string b)
        {
            int SizeOfResultString = LCM(a.Length, b.Length);
            StringBuilder stringBuilder = new();
            string NewGeneratedStringFromFirstString, NewGeneratedStringFromSecondString;
            int NumberOfNeededStringsOfFirstInputString, NumberOfNeededStringsOfSecondInputString;
            NumberOfNeededStringsOfFirstInputString = SizeOfResultString / a.Length;
            NumberOfNeededStringsOfSecondInputString = SizeOfResultString / b.Length;
            for (int i = 0; i < NumberOfNeededStringsOfFirstInputString; i++)
                stringBuilder.Append(a);
            NewGeneratedStringFromFirstString = stringBuilder.ToString();
            stringBuilder.Clear();
            for (int i = 0; i < NumberOfNeededStringsOfSecondInputString; i++)
                stringBuilder.Append(b);
            NewGeneratedStringFromSecondString = stringBuilder.ToString();
            stringBuilder.Clear();
            if (string.Equals(NewGeneratedStringFromFirstString, NewGeneratedStringFromSecondString))
                return NewGeneratedStringFromFirstString;
            else
                return "-1";
        }

        private static int GCD(int a, int b)
        {
            if (b == 0)
                return a;
            return GCD(b, a % b);
        }

        private static int LCM(int a, int b)
        {
            return (a * b) / GCD(a, b);
        }
    }
}